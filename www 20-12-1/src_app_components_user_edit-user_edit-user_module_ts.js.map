{"version":3,"sources":["./src/app/components/user/edit-user/edit-user-routing.module.ts","./src/app/components/user/edit-user/edit-user.module.ts","./src/app/components/user/edit-user/edit-user.page.ts","./src/app/components/user/edit-user/edit-user.page.scss","./src/app/components/user/edit-user/edit-user.page.html"],"names":[],"mappings":"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","file":"src_app_components_user_edit-user_edit-user_module_ts.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { EditUserPage } from './edit-user.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: EditUserPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class EditUserPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { EditUserPageRoutingModule } from './edit-user-routing.module';\n\nimport { EditUserPage } from './edit-user.page';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        IonicModule,\n        EditUserPageRoutingModule,\n        ReactiveFormsModule\n    ],\n  declarations: [EditUserPage]\n})\nexport class EditUserPageModule {}\n","import {Component, OnInit} from '@angular/core';\nimport {FormBuilder, FormGroup, Validators} from \"@angular/forms\";\nimport {RinitPasswordAction, UpdateUserAction} from \"../../../stat-managment/user/user.actions\";\nimport {Router} from \"@angular/router\";\nimport {Store} from \"@ngrx/store\";\nimport {AppStat} from \"../../../stat-managment/app.reduecer\";\nimport {AppUser} from \"../../../models/AppUser\";\nimport {Observable} from \"rxjs\";\nimport {map} from \"rxjs/operators\";\nimport {AlertController, LoadingController} from \"@ionic/angular\";\n\n\n@Component({\n  selector: 'app-edit-user',\n  templateUrl: './edit-user.page.html',\n  styleUrls: ['./edit-user.page.scss'],\n})\nexport class EditUserPage implements OnInit {\n\n  state$: Observable<AppStat>;\n  selectedUser: AppUser = null;\n  dataArrived: boolean = false;\n  private userForm: FormGroup = this.fb.group(\n    {\n      id: [\"\"],\n      userName: [\"\", Validators.required],\n      role: [\"\", Validators.required]\n    });\n  private passwordFormControl: FormGroup = this.fb.group(\n    {\n      psw: [\"\", Validators.required]\n    }\n  )\n\n  constructor(public router: Router, private fb: FormBuilder,\n              private store: Store<any>,\n              private loadingCtrl: LoadingController,\n              private alertcontroler: AlertController\n\n  ) {\n  }\n\n  ngOnInit() {\n    //this.basicLoader();\n\n    this.state$ = this.store.pipe(map((s) => {\n        this.selectedUser = s.appStatAct.userStat.selectedUser;\n        let r: String = \"\";\n        if (this.selectedUser != null) {\n          this.dataArrived = true;\n          if (this.selectedUser.roles[0] != null) r = this.selectedUser.roles[0].roleName;\n          this.userForm = this.fb.group(\n            {\n              id: [this.selectedUser.id],\n              userName: [this.selectedUser.userName, Validators.required],\n              role: [r, Validators.required]\n            })\n        }\n        return s.appStatAct\n      }\n    ));\n  }\n\n\n  basicLoader() {\n    this.loadingCtrl.create({\n      message: 'Please wait...',\n      duration: 1000,\n      translucent: true\n    }).then((res) => {\n      res.present();\n      res.onDidDismiss().then((res) => {\n\n      });\n    });\n  }\n\n  onEditUser(user: any) {\n\n    if (user.id != null) {\n      this.store.dispatch(new UpdateUserAction(\n        {\n          id: user.id,\n          userName: user.userName,\n          password: null,\n          roles: [{id: null, roleName: user.role}]\n        }\n      ));\n    }\n    this.router.navigateByUrl('/menu/users');\n  }\n\n  onAnnuler() {\n    this.router.navigateByUrl('/menu/users');\n  }\n\n  rinitPasword(s : any, user: AppUser) {\n    if (this.passwordFormControl.valid) {\n\n        this.store.dispatch(\n        new RinitPasswordAction(\n          {\n            id: user.id,\n            userName: user.userName,\n            password: s.psw,\n            roles:null\n          }\n        )\n      )\n\n      this.alertcontroler.create(\n        {\n          header: \"info\",\n          subHeader: \"success\",\n          message: \"Mot de passe rinitialiser avec success\",\n          buttons: [\"OK\"]\n        }\n      ).then(res =>{ res.present();})\n\n      this.passwordFormControl= this.fb.group(\n        {\n          psw: [\"\", Validators.required]\n        })\n\n    } else {\n\n     this.alertcontroler.create(\n        {\n          header:\"Alerte\",\n          subHeader:\"Manque d'iformation\",\n          message:\"Veuillez ComlÃ©ter la sisai des information Moncantes .\",\n          buttons:[\"OK\"]\n        }\n      ).then(res=>{res.present();})\n    }\n\n\n\n    }\n}\n\n\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJlZGl0LXVzZXIucGFnZS5zY3NzIn0= */\";","export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-menu-button></ion-menu-button>\\n    </ion-buttons>\\n    <ion-buttons slot=\\\"primary\\\">\\n      <ion-button routerLink=\\\"../home\\\">\\n        <ion-icon name=\\\"podium-outline\\\" slot=\\\"icon-only\\\"></ion-icon>\\n      </ion-button>\\n    </ion-buttons>\\n    <ion-buttons slot=\\\"end\\\">\\n      <ion-button (click)=\\\"onAnnuler()\\\" color=\\\"primary\\\">Close</ion-button>\\n    </ion-buttons>\\n    <ion-title>\\n      MAJ Collaborateurs\\n    </ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content *ngIf=\\\"state$|async as state\\\">\\n  <form>\\n    <ion-card-content>\\n      <form [formGroup]=\\\"userForm\\\">\\n        <ion-list>\\n          <ion-item>\\n            <label><strong>Non de collaborateur </strong></label>\\n          </ion-item>\\n          <ion-item>\\n            <ion-input formControlName=\\\"userName\\\" id=\\\"username\\\" placeholder=\\\"Nom d'utilistateur\\\"\\n                       type=\\\"text\\\"></ion-input>\\n          </ion-item>\\n\\n          <ion-list>\\n            <ion-list-header>\\n              <ion-label><strong>Mission de collaborateur :</strong></ion-label>\\n            </ion-list-header>\\n            <ion-radio-group formControlName=\\\"role\\\">\\n              <ion-item *ngFor=\\\"let r of state.roleStat.roles\\\">\\n                <ion-label> {{r.roleName}} </ion-label>\\n                <ion-radio color=\\\"primary\\\" slot=\\\"start\\\" value={{r.roleName}}></ion-radio>\\n              </ion-item>\\n            </ion-radio-group>\\n          </ion-list>\\n          <ion-item>\\n            <ion-button (click)=onEditUser(userForm.value) expand=\\\"block\\\">Enregistrer</ion-button>\\n          </ion-item>\\n\\n\\n        </ion-list>\\n      </form>\\n      <form [formGroup]=\\\"passwordFormControl\\\">\\n        <ion-list>\\n          <ion-item>\\n            <label><strong>Rinitialiser password </strong> </label>\\n          </ion-item>\\n\\n          <ion-item>\\n            <ion-input  formControlName=\\\"psw\\\"   id=\\\"password\\\" placeholder=\\\"Nouveau mot de pass\\\" slot=\\\"start\\\" type=\\\"text\\\"></ion-input>\\n            <ion-button (click)=rinitPasword(passwordFormControl.value,userForm.value) expand=\\\"block\\\" slot=\\\"end\\\">Rinitialiser</ion-button>\\n          </ion-item>\\n\\n        </ion-list>\\n      </form>\\n    </ion-card-content>\\n  </form>\\n</ion-content>\\n\";"],"sourceRoot":"webpack:///"}